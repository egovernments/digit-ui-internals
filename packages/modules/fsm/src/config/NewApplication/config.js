export const newConfig = [
  {
    head: "ES_NEW_APPLICATION_PROPERTY_DETAILS",
    body: [
      {
        label: "ES_NEW_APPLICATION_PROPERTY_TYPE",
        isMandatory: true,
        type: "component",
        route: "property-type",
        key: "propertyType",
        component: "SelectPropertyType",
        texts: {
          headerCaption: "",
          header: "CS_FILE_APPLICATION_PROPERTY_LABEL",
          cardText: "CS_FILE_APPLICATION_PROPERTY_TEXT",
          submitBarLabel: "CS_COMMON_NEXT",
        },
        nextStep: "property-subtype",
      },
      {
        label: "ES_NEW_APPLICATION_PROPERTY_SUB-TYPE",
        isMandatory: true,
        type: "component",
        route: "property-subtype",
        key: "subtype",
        component: "SelectPropertySubtype",
        groupKey: "ES_TITLE_APPLICATION_DETAILS",
        texts: {
          headerCaption: "",
          header: "CS_FILE_APPLICATION_PROPERTY_SUBTYPE_LABEL",
          cardText: "CS_FILE_APPLICATION_PROPERTY_SUBTYPE_TEXT",
          submitBarLabel: "CS_COMMON_NEXT",
        },
        nextStep: "map",
      },
      {
        route: "map",
        component: "SelectGeolocation",
        nextStep: "pincode",
        hideInEmployee: true,
      },
    ],
  },
  {
    head: "ES_NEW_APPLICATION_LOCATION_DETAILS",
    body: [
      {
        route: "pincode",
        component: "SelectPincode",
        texts: {
          headerCaption: "",
          header: "CS_FILE_APPLICATION_PINCODE_LABEL",
          cardText: "CS_FILE_APPLICATION_PINCODE_TEXT",
          nextText: "CS_COMMON_NEXT",
          skipText: "CORE_COMMON_SKIP_CONTINUE",
        },
        inputs: [
          {
            label: "CORE_COMMON_PINCODE",
            type: "text",
            name: "pincode",
            validation: {
              pattern: /^([1-9])(\d{5})$/,
              minLength: 6,
              maxLength: 7,
            },
            error: "CORE_COMMON_PINCODE_INVALID",
          },
        ],
        withoutLabel: true,
        key: "pincode",
        nextStep: "address",
        type: "component",
      },
      {
        route: "address",
        component: "SelectAddress",
        withoutLabel: true,
        texts: {
          headerCaption: "CS_FILE_APPLICATION_PROPERTY_LOCATION_LABEL",
          header: "CS_FILE_APPLICATION_PROPERTY_LOCATION_ADDRESS_TEXT",
          cardText: "CS_FILE_APPLICATION_PROPERTY_LOCATION_CITY_MOHALLA_TEXT",
          nextText: "CS_COMMON_NEXT",
        },
        key: "complaint",
        nextStep: "street",
        isMandatory: true,
        type: "component",
      },
      {
        type: "component",
        isMandatory: true,
        component: "SelectSlumName",
        texts: {
          header: "ES_NEW_APPLICATION_SLUM_NAME",
        },
        withoutLabel: true,
        key: "slum",
        hideInCitizen: true,
      },
      {
        type: "component",
        route: "street",
        component: "SelectStreet",
        key: "street",
        withoutLabel: true,
        texts: {
          headerCaption: "CS_FILE_APPLICATION_PROPERTY_LOCATION_LABEL",
          header: "CS_FILE_APPLICATION_PROPERTY_LOCATION_ADDRESS_TEXT",
          cardText: "CS_FILE_APPLICATION_PROPERTY_LOCATION_STREET_DOOR_NO_LABEL",
          nextText: "CS_COMMON_NEXT",
          skipText: "CORE_COMMON_SKIP_CONTINUE",
        },
        inputs: [
          {
            label: "CS_FILE_APPLICATION_PROPERTY_LOCATION_STREET_NAME_LABEL",
            type: "text",
            name: "street",
            validation: {
              pattern: /^[\w\s]{1,256}$/,
            },
            error: "CORE_COMMON_STREET_INVALID",
          },
          {
            label: "CS_FILE_APPLICATION_PROPERTY_LOCATION_DOOR_NO_LABEL",
            type: "text",
            name: "doorNo",
            validation: {
              pattern: /^[\w]([\w\/,\s])*$/,
            },
            error: "CORE_COMMON_DOOR_INVALID",
          },
        ],
        nextStep: "landmark",
      },
      {
        type: "component",
        route: "landmark",
        component: "SelectLandmark",
        withoutLabel: true,
        texts: {
          headerCaption: "CS_FILE_APPLICATION_PROPERTY_LOCATION_LABEL",
          header: "CS_FILE_APPLICATION_PROPERTY_LOCATION_PROVIDE_LANDMARK_TITLE",
          cardText: "CS_FILE_APPLICATION_PROPERTY_LOCATION_PROVIDE_LANDMARK_TEXT",
          nextText: "CS_COMMON_NEXT",
          skipText: "CORE_COMMON_SKIP_CONTINUE",
        },
        key: "landmark",
        inputs: [
          {
            label: "ES_NEW_APPLICATION_LOCATION_LANDMARK",
            type: "textarea",
            name: "landmark",
            validation: {
              maxLength: 1024,
            },
          },
        ],
        nextStep: "pit-type",
      },
    ],
  },
  {
    head: "CS_CHECK_PIT_SEPTIC_TANK_DETAILS",
    body: [
      {
        label: "ES_NEW_APPLICATION_PIT_TYPE",
        isMandatory: true,
        type: "component",
        route: "pit-type",
        key: "pitType",
        component: "SelectPitType",
        texts: {
          header: "CS_FILE_PROPERTY_PIT_TYPE",
          cardText: "CS_FILE_PROPERTY_PIT_TYPE_TEXT",
          nextText: "CS_COMMON_NEXT",
        },
        nextStep: "tank-size",
      },
      {
        route: "tank-size",
        component: "SelectTankSize",
        texts: {
          headerCaption: "",
          header: "CS_FILE_APPLICATION_PIT_SEPTIC_TANK_SIZE_TITLE",
          cardText: "CS_FILE_APPLICATION_PIT_SEPTIC_TANK_SIZE_TEXT",
          nextText: "CS_COMMON_NEXT",
          skipText: "CORE_COMMON_SKIP_CONTINUE",
        },
        type: "component",
        key: "pitDetail",
        nextStep: null,
        label: "ES_NEW_APPLICATION_PIT_DIMENSION",
      },
    ],
  },
];
